#BlueJ class context
comment0.target=Platno
comment0.text=\r\n\ Canvas\ is\ a\ class\ to\ allow\ for\ simple\ graphical\ drawing\ on\ a\ canvas.\r\n\ This\ is\ a\ modification\ of\ the\ general\ purpose\ Canvas,\ specially\ made\ for\r\n\ the\ BlueJ\ "shapes"\ example.\ \r\n\r\n\ @author\:\ Bruce\ Quig\r\n\ @author\:\ Michael\ Kolling\ (mik)\r\n\r\n\ @version\:\ 1.6.1\ (shapes)\r\n
comment1.params=
comment1.target=Platno\ dajPlatno()
comment1.text=\r\n\ Factory\ method\ to\ get\ the\ canvas\ singleton\ object.\r\n
comment10.params=
comment10.target=void\ redraw()
comment10.text=\r\n\ *\ Redraw\ all\ shapes\ currently\ on\ the\ Canvas.\r\n
comment11.params=
comment11.target=void\ erase()
comment11.text=\r\n\ Erase\ the\ whole\ canvas.\ (Does\ not\ repaint.)\r\n
comment12.params=listener
comment12.target=void\ addKeyListener(java.awt.event.KeyListener)
comment13.params=listener
comment13.target=void\ addMouseListener(java.awt.event.MouseListener)
comment14.params=listener
comment14.target=void\ addTimerListener(java.awt.event.ActionListener)
comment15.params=text\ x\ y
comment15.target=void\ drawString(java.lang.String,\ int,\ int)
comment15.text=\r\n\ Draws\ a\ String\ on\ the\ Canvas.\r\n\ @param\ \ text\ \ \ the\ String\ to\ be\ displayed\ \r\n\ @param\ \ x\ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \r\n\ @param\ \ y\ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\r\n
comment16.params=
comment16.target=void\ setFont()
comment16.text=\r\n\ Zmen\u00ED\ font\ stringu\ pre\ nadpis.\r\n
comment17.params=
comment17.target=void\ setFont2()
comment17.text=\r\n\ Zmen\u00ED\ font\ stringu\ pre\ \u010D\u00EDsla.\r\n
comment18.params=
comment18.target=void\ setFont3()
comment18.text=\r\n\ Zmen\u00ED\ font\ stringu\ pre\ koniec\ hry.\r\n
comment19.params=
comment19.target=java.awt.Font\ getFont()
comment19.text=\r\n\ Returns\ the\ current\ font\ of\ the\ canvas.\r\n\ @return\ \ \ \ \ the\ font\ currently\ in\ use\r\n
comment2.params=
comment2.target=void\ odstranPlatno()
comment2.text=\r\n\ Odstrani\ pl\u00E1tno.\r\n
comment3.params=titulok\ sirka\ vyska\ pozadie
comment3.target=Platno(java.lang.String,\ int,\ int,\ java.awt.Color)
comment3.text=\r\n\ Create\ a\ Canvas.\r\n\ @param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\r\n\ @param\ width\ \ the\ desired\ width\ for\ the\ canvas\r\n\ @param\ height\ \ the\ desired\ height\ for\ the\ canvas\r\n\ @param\ bgClour\ \ the\ desired\ background\ colour\ of\ the\ canvas\r\n
comment4.params=visible
comment4.target=void\ setVisible(boolean)
comment4.text=\r\n\ Set\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\r\n\ when\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\r\n\ visible\ canvas\ to\ the\ front\ of\ other\ windows.\r\n\ @param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\r\n\ the\ canvas\ (true\ or\ false)\ \r\n
comment5.params=objekt\ farba\ tvar
comment5.target=void\ draw(java.lang.Object,\ java.lang.String,\ java.awt.Shape)
comment5.text=\r\n\ Draw\ a\ given\ shape\ onto\ the\ canvas.\r\n\ @param\ \ referenceObject\ \ an\ object\ to\ define\ identity\ for\ this\ shape\r\n\ @param\ \ color\ \ \ \ \ \ \ \ \ \ \ \ the\ color\ of\ the\ shape\r\n\ @param\ \ shape\ \ \ \ \ \ \ \ \ \ \ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\r\n
comment6.params=objekt\ image\ transform
comment6.target=void\ draw(java.lang.Object,\ java.awt.image.BufferedImage,\ java.awt.geom.AffineTransform)
comment6.text=\r\n\ Draw\ a\ given\ image\ onto\ the\ canvas.\r\n\ @param\ \ referenceObject\ \ an\ object\ to\ define\ identity\ for\ this\ image\r\n\ @param\ \ image\ \ \ \ \ \ \ \ \ \ \ \ the\ image\ object\ to\ be\ drawn\ on\ the\ canvas\r\n\ @param\ \ transform\ \ \ \ \ \ \ \ the\ transformation\ applied\ to\ the\ image\r\n
comment7.params=objekt
comment7.target=void\ erase(java.lang.Object)
comment7.text=\r\n\ Erase\ a\ given\ shape's\ from\ the\ screen.\r\n\ @param\ \ referenceObject\ \ the\ shape\ object\ to\ be\ erased\ \r\n
comment8.params=farba
comment8.target=void\ setForegroundColor(java.lang.String)
comment8.text=\r\n\ Set\ the\ foreground\ colour\ of\ the\ Canvas.\r\n\ @param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ foreground\ of\ the\ Canvas\ \r\n
comment9.params=milisekundy
comment9.target=void\ wait(int)
comment9.text=\r\n\ Wait\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\r\n\ This\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\r\n\ used\ when\ producing\ animations.\r\n\ @param\ \ milliseconds\ \ the\ number\ \r\n
numComments=20
